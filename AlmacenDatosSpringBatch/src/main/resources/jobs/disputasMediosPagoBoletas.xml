<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- <job id="jobStepJob" restartable="true" xmlns="http://www.springframework.org/schema/batch"> <step id="jobStepJob.step1"> <job ref="tradeJob" job-parameters-extractor="jobParametersExtractor" /> 
		</step> </job> -->

	<job id="tradeJob" restartable="true" xmlns="http://www.springframework.org/schema/batch">
		<step id="step1">
			<tasklet>
				<chunk reader="itemReader" writer="itemWriter" commit-interval="2" />
			</tasklet>
		</step>
	</job>

	<bean id="jobParametersExtractor" class="org.springframework.batch.core.step.job.DefaultJobParametersExtractor">
		<property name="keys" value="input.file" />
	</bean>
	<bean id="itemReader" class="org.springframework.batch.item.data.RepositoryItemReader" scope="step">
		<property name="pageSize" value="2" />
		<property name="methodName" value="findByVersionModelo" />
		<property name="repository" ref="jsonRepository" />
		<property name="arguments">
			<list>
				<!-- <value>#{new java.math.BigDecimal(jobParameters[credit])}</value> -->
				<value>version</value>
				<value>modelo</value>
			</list>
		</property>
		<property name="sort">
			<map>
				<entry key="id" value="ASC" />
			</map>
		</property>
	</bean>
	<bean id="itemWriter2" class="org.beanio.spring.BeanIOFlatFileItemWriter">
		<property name="streamMapping" value="classpath:/jobs/mapeoDisputasBoletas.xml" />
		<property name="streamName" value="boletas" />
		<property name="resource" value="file:out.txt" />
	</bean>

	<bean id="jsonRepository" class="es.gfi.batch.repository.BamRepository"></bean>

	<bean id="itemWriter" class="es.gfi.batch.writer.BeanIoWriter" scope="step"/>





</beans>